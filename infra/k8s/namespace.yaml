apiVersion: v1
kind: Namespace
metadata:
  name: iyield
  labels:
    name: iyield
    app.kubernetes.io/name: iyield
    app.kubernetes.io/instance: production
---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
  labels:
    name: monitoring
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/instance: production
---
# Service account for oracle pods with IRSA
apiVersion: v1
kind: ServiceAccount
metadata:
  name: oracle-service-account
  namespace: iyield
  annotations:
    eks.amazonaws.com/role-arn: ${ORACLE_SERVICE_ACCOUNT_ROLE_ARN}
---
# Service account for frontend pods with IRSA
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend-service-account
  namespace: iyield
  annotations:
    eks.amazonaws.com/role-arn: ${FRONTEND_SERVICE_ACCOUNT_ROLE_ARN}
---
# Network policy for iyield namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: iyield-network-policy
  namespace: iyield
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector:
        matchLabels:
          app: iyield-frontend
    - podSelector:
        matchLabels:
          app: iyield-oracle
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 8545  # Ethereum RPC